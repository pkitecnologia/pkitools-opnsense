#!/bin/sh
# Usage:
#   $0 latency DESTINATION [SOURCE]
#   $0 loss    DESTINATION [SOURCE]
# Output:
#   latency -> average RTT in ms (number), or 0 if unavailable
#   loss    -> packet loss percent as integer 0..100, or 100 if unavailable

export PATH="/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin"

OP="$1"
DEST="$2"
SRC="$3"

[ -n "$OP" ] && [ -n "$DEST" ] || {
    echo "usage: $0 {latency|loss} DESTINATION [SOURCE]" >&2
    exit 1
}

# Build ping params (quiet)
PPARAM="-q"
# Choose -S (source address) if SRC looks like IP, else -I (interface)
if [ -n "$SRC" ]; then
    case "$SRC" in
        *.*|*:* ) PPARAM="$PPARAM -S $SRC" ;;
        * )       PPARAM="$PPARAM -I $SRC" ;;
    esac
fi

case "$OP" in
    latency)
        # 5 probes, default interval
        OUT=$(ping $PPARAM -c 5 "$DEST" 2>/dev/null)

        # Works with FreeBSD ping "round-trip min/avg/max/stddev = a/b/c/d ms"
        # (and many Linux pings that print "rtt min/avg/max/mdev = ...")
        AVG=$(echo "$OUT" \
            | grep -E "round-trip|rtt" \
            | awk -F'=' '{ if (NF>1) {gsub(/^[[:space:]]+|[[:space:]]+$/,"",$2); print $2} }' \
            | awk -F'/' '{ gsub(/[[:space:]]*ms.*/,"",$2); print $2 }')

        if [ -z "$AVG" ]; then
            echo 0
        else
            echo "$AVG"
        fi
        ;;

    loss)
        # 50 probes, 100ms interval
        OUT=$(ping $PPARAM -c 50 -i 0.1 "$DEST" 2>/dev/null)

        # Extract "<num>% packet loss" (with optional decimal)
        LOSS=$(echo "$OUT" \
            | grep "packet loss" \
            | awk '{for(i=1;i<=NF;i++) if($i ~ /%$/){sub("%","",$i); loss=$i}} END{if(loss=="") exit 1; print int(loss+0.5)}')

        if [ -z "$LOSS" ]; then
            echo 100
        else
            echo "$LOSS"
        fi
        ;;
    *)
        echo "unknown op: $OP (use 'latency' or 'loss')" >&2
        exit 2
        ;;
esac
